using Microsoft.CodeAnalysis;

namespace Scribe.MSTest
{
	[Generator]
	public class MSTestGenerator : ISourceGenerator
	{

		public void Initialize(GeneratorInitializationContext context)
		{
		}

		public void Execute(GeneratorExecutionContext context)
		{
			//if (!(context.SyntaxReceiver is SpecReceiver receiver))
			//	return;


			//foreach (var spec in receiver.SpecClasses)
			//{
			//	var className = spec.Identifier.ValueText;
			//	var code = new StringBuilder($@"
			//			// Tests generated by Scribe at {DateTime.Now}. 
			//			// You no touchee.

			//			namespace {spec.GetType().Namespace}
			//			{{
			//				[TestClass]
			//				public partial class {spec.GetType().Name}
			//				{{
			//		");

			//	//foreach (var test in spec.Tests)
			//	//	code.Append($"[TestMethod] public void {scribe.TestMethodName(test)}() => Run({test.Id});");

			//	code.AppendLine("}}");
			//	code.AppendLine("}}");

			//	context.AddSource($"{className}.cs", SourceText.From(code.ToString(), Encoding.UTF8));
			//}
		}
	}
}
